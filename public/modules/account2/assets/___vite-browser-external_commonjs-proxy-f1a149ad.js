var a = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {}; function s(e) { return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e } function u(e) { if (e.__esModule) return e; var o = e.default; if (typeof o == "function") { var t = function r() { return this instanceof r ? Reflect.construct(o, arguments, this.constructor) : o.apply(this, arguments) }; t.prototype = o.prototype } else t = {}; return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(e).forEach(function (r) { var n = Object.getOwnPropertyDescriptor(e, r); Object.defineProperty(t, r, n.get ? n : { enumerable: !0, get: function () { return e[r] } }) }), t } function f(e) { throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.') } const i = {}, l = Object.freeze(Object.defineProperty({ __proto__: null, default: i }, Symbol.toStringTag, { value: "Module" })), c = u(l); export { a, u as b, f as c, s as g, c as r };
